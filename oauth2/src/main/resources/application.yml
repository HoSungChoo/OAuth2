spring:
  application:
    name: oauth2

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${yml.file.datasource.url}
    username: ${yml.file.datasource.username}
    password: ${yml.file.datasource.password}

  jpa:
    hibernate.ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${security.naver.client-id} # 서비스에서 발급 받은 아이디
            client-secret: ${security.naver.client-secret} # 서비스에서 발급 받은 비밀번호
            redirect-uri: http://localhost:8080/login/oauth2/code/naver # 리다이렉트 주소
            authorization-grant-type: authorization_code # code grant type
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 서비스 로그인 창 주소
            token-uri: https://nid.naver.com/oauth2.0/token # 토큰 발급 서버 주소. 인증 서버 주소를 의미
            user-info-uri: https://openapi.naver.com/v1/nid/me # 사용자 정보 주소. 리소스 서버 주소를 의미
            user-info-authentication-method: header # 클라이언트가 인증 정보를 가져오는 방식. 헤더를 통해 전달받는다.
            user-name-attribute: response # 응답 데이터 변수

  jwt:
    secret: ${jwt.secret}